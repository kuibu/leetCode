public class Solution {
    public List<Integer> topKFrequent(int[] nums, int k) {
        List<Integer>[] bucket=new List[nums.length+1];//最多出现次数为nums.length次，所以桶的最大索引应该是nums.length，所以长度要为nums.length+1,这样索引才是[0~nums.length]
        Map<Integer,Integer> map=new HashMap<>();
        
        //hashmap统计每个数出现的次数
        for(int num:nums){
            int count=map.getOrDefault(num,0);
            map.put(num,count+1);
        }
        //bucket
        for(int key:map.keySet()){
            int freq=map.get(key);
            if(bucket[freq]==null){
                bucket[freq]=new ArrayList<>();
            }
            bucket[freq].add(key);
        }
        //output
        List<Integer> rst=new ArrayList<>();
        for(int i=bucket.length-1;i>=0 && rst.size()<k;i--){
            if(bucket[i]!=null){
                rst.addAll(bucket[i]);
            }
            
        }
        return rst;
    }
}