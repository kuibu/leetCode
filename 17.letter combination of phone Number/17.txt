public class Solution {
    public List<String> letterCombinations(String digits) {
        
        List<String> rst=new ArrayList<>();//存放结果
        if(digits==null || digits.equals("")) return rst;//判断字符串是否等于一个字符串时用digits.equals(""), 这种写法是错误的:digits==" "
        
        Map<Character,char[]> map=new HashMap<>();//构建HashMap
        map.put('0',new char[] {});
        map.put('1',new char[] {});
        map.put('2', new char[] { 'a', 'b', 'c' });
        map.put('3', new char[] { 'd', 'e', 'f' });
        map.put('4', new char[] { 'g', 'h', 'i' });
        map.put('5', new char[] { 'j', 'k', 'l' });
        map.put('6', new char[] { 'm', 'n', 'o' });
        map.put('7', new char[] { 'p', 'q', 'r', 's' });
        map.put('8', new char[] { 't', 'u', 'v'});
        map.put('9', new char[] { 'w', 'x', 'y', 'z' });
        
        StringBuilder builder=new StringBuilder();
        subRst(digits,rst,builder,map);

        return rst;
    }
    public void subRst(String digits,List<String> rst,StringBuilder builder,Map<Character,char[]> map){
        if(builder.length()==digits.length()){
            rst.add(builder.toString());
            return;
        }
        for(char ch:map.get(digits.charAt(builder.length()))){
            builder.append(ch);
            subRst(digits,rst,builder,map);
            builder.deleteCharAt(builder.length()-1);
        }
    }
}